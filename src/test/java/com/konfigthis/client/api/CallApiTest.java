/*
 * Retell SDK
 * API for voice AI. Effortlessly integrate human-like Voice AI into your product. | We are building an API that enables your product to provide an intuitive and engaging way for user interaction - through voice.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: founders@retellai.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CallBase;
import com.konfigthis.client.model.CallDetail;
import com.konfigthis.client.model.CallEstablishConnectionRequest;
import com.konfigthis.client.model.CallGetDetailsFilterCriteriaParameter;
import com.konfigthis.client.model.CallMakeConnectionRequest;
import com.konfigthis.client.model.CallMakeConnectionRequestPhoneNumber;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CallApi
 */
@Disabled
public class CallApiTest {

    private static CallApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CallApi(apiClient);
    }

    /**
     * Register Call To Get CallId To Establish Connection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void establishConnectionTest() throws ApiException {
        String agentId = null;
        String audioWebsocketProtocol = null;
        String audioEncoding = null;
        Integer sampleRate = null;
        Integer endCallAfterSilenceMs = null;
        String fromNumber = null;
        String toNumber = null;
        Object metadata = null;
        Map<String, Object> retellLlmDynamicVariables = null;
        CallBase response = api.establishConnection(agentId, audioWebsocketProtocol, audioEncoding, sampleRate)
                .endCallAfterSilenceMs(endCallAfterSilenceMs)
                .fromNumber(fromNumber)
                .toNumber(toNumber)
                .metadata(metadata)
                .retellLlmDynamicVariables(retellLlmDynamicVariables)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve details of a specific call
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        String callId = null;
        CallDetail response = api.getDetails(callId)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve call details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetails_0Test() throws ApiException {
        CallGetDetailsFilterCriteriaParameter filterCriteria = null;
        String sortOrder = null;
        Integer limit = null;
        List<CallDetail> response = api.getDetails_0()
                .filterCriteria(filterCriteria)
                .sortOrder(sortOrder)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * Create a new phone call
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void makeConnectionTest() throws ApiException {
        CallMakeConnectionRequestPhoneNumber phoneNumber = null;
        String overrideAgentId = null;
        Map<String, Object> retellLlmDynamicVariables = null;
        CallBase response = api.makeConnection(phoneNumber)
                .overrideAgentId(overrideAgentId)
                .retellLlmDynamicVariables(retellLlmDynamicVariables)
                .execute();
        // TODO: test validations
    }

}
