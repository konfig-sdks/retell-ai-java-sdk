/*
 * Retell SDK
 * API for voice AI. Effortlessly integrate human-like Voice AI into your product. | We are building an API that enables your product to provide an intuitive and engaging way for user interaction - through voice.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: founders@retellai.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AgentCreateNewAgentRequest;
import com.konfigthis.client.model.AgentResponse;
import com.konfigthis.client.model.BaseAgent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AgentApi
 */
@Disabled
public class AgentApiTest {

    private static AgentApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AgentApi(apiClient);
    }

    /**
     * Create a new agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewAgentTest() throws ApiException {
        String llmWebsocketUrl = null;
        String voiceId = null;
        Double voiceTemperature = null;
        Double voiceSpeed = null;
        Double responsiveness = null;
        Boolean enableBackchannel = null;
        String ambientSound = null;
        String agentName = null;
        String language = null;
        String webhookUrl = null;
        List<String> boostedKeywords = null;
        Boolean formatText = null;
        Boolean optOutSensitiveDataStorage = null;
        AgentResponse response = api.createNewAgent()
                .llmWebsocketUrl(llmWebsocketUrl)
                .voiceId(voiceId)
                .voiceTemperature(voiceTemperature)
                .voiceSpeed(voiceSpeed)
                .responsiveness(responsiveness)
                .enableBackchannel(enableBackchannel)
                .ambientSound(ambientSound)
                .agentName(agentName)
                .language(language)
                .webhookUrl(webhookUrl)
                .boostedKeywords(boostedKeywords)
                .formatText(formatText)
                .optOutSensitiveDataStorage(optOutSensitiveDataStorage)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete an existing agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExistingAgentTest() throws ApiException {
        String agentId = null;
        api.deleteExistingAgent(agentId)
                .execute();
        // TODO: test validations
    }

    /**
     * List all agents
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        List<AgentResponse> response = api.getAll()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve details of a specific agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        String agentId = null;
        AgentResponse response = api.getDetails(agentId)
                .execute();
        // TODO: test validations
    }

    /**
     * Update an existing agent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExistingAgentTest() throws ApiException {
        String agentId = null;
        String llmWebsocketUrl = null;
        String voiceId = null;
        Double voiceTemperature = null;
        Double voiceSpeed = null;
        Double responsiveness = null;
        Boolean enableBackchannel = null;
        String ambientSound = null;
        String agentName = null;
        String language = null;
        String webhookUrl = null;
        List<String> boostedKeywords = null;
        Boolean formatText = null;
        Boolean optOutSensitiveDataStorage = null;
        AgentResponse response = api.updateExistingAgent(agentId)
                .llmWebsocketUrl(llmWebsocketUrl)
                .voiceId(voiceId)
                .voiceTemperature(voiceTemperature)
                .voiceSpeed(voiceSpeed)
                .responsiveness(responsiveness)
                .enableBackchannel(enableBackchannel)
                .ambientSound(ambientSound)
                .agentName(agentName)
                .language(language)
                .webhookUrl(webhookUrl)
                .boostedKeywords(boostedKeywords)
                .formatText(formatText)
                .optOutSensitiveDataStorage(optOutSensitiveDataStorage)
                .execute();
        // TODO: test validations
    }

}
